{"ast":null,"code":"var _jsxFileName = \"/home/rj/ProductionLab/advancements/wixware/src/Pages/Search.jsx\";\nimport React from 'react';\nimport ItemVLC from '../Components/Items/VLC';\nimport ItemCamtasia from '../Components/Items/Camtasia';\nimport ItemCCleaner from '../Components/Items/CCleaner';\nimport ItemInkscape from '../Components/Items/InkScape';\nimport ItemBlender from '../Components/Items/Blender';\nimport ItemVSCode from '../Components/Items/VSCode';\nimport ItemFirefox from '../Components/Items/Firefox';\nimport ItemCoreCAD from '../Components/Items/CorelCAD';\nimport ItemKLite from '../Components/Items/KLiteCodecPack';\nimport ItemAvast from '../Components/Items/Avast';\nimport ItemWinRAR from '../Components/Items/ItemWinRAR';\nimport ItemKMPlayer from '../Components/Items/KMPlayer';\nimport Item7Zip from '../Components/Items/7Zip';\nimport ItemAudacity from '../Components/Items/Audacity';\nimport ItemIDM from '../Components/Items/ItemIDM';\nimport ItemChrome from '../Components/Items/Chrome';\nimport ItemOBS from '../Components/Items/ItemOBS';\n\nfunction Search(props) {\n  function getKeywords() {\n    const str = window.location.search;\n    let keyword = str.replace('?keyword=', '');\n    let keywords = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, ' ');\n    return keywords;\n  }\n\n  function getResults() {\n    const str = window.location.search;\n    let keyword = str.replace('?keyword=', '');\n    let keywords = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, ' '); // Temporarily using hardcoded data\n\n    const inventory = {\n      \"ItemCCleaner\": \"ccleaner, c-cleaner, system cleaner, antivirus, anti virus, scanner, systemcleaner\",\n      \"ItemVLC\": \"vlc media player, vlcmediaplayer, mediaplayer\",\n      \"ItemBlender\": \"blender, video editor\",\n      \"ItemAudacity\": \"audacity, audio editor, noise reducer, pitch\",\n      \"ItemInkscape\": \"inkscape, illustrator, svg\",\n      \"ItemAvast\": \"avast, antivirus, system protection\",\n      \"ItemCamtasia\": \"camtasia, video editor, tech smith\",\n      \"ItemChrome\": \"google chrome, internet, web, browser\",\n      \"ItemKMPlayer\": \"kmplayer, km player, videoplayer, video, media codec\",\n      \"ItemFirefox\": \"mozilla firefox, opensource, open source, internet, web, browser\",\n      \"ItemIDM\": \"download, manager, idm, internet\",\n      \"Item7Zip\": \"7zip, 7 zip, file extractor, compressor, archive\",\n      \"ItemVSCode\": \"vscode, microsoft vs code, file, text, code, editor, developer, programmer, open source, opensource\",\n      \"ItemWinRAR\": \"winrar, win rar,file extractor, compressor, archive\",\n      \"ItemCorelCAD\": \"corecad, corel cad, 3d, graphics, blueprint\",\n      \"ItemKLiteCodecPack\": \"klite, k lite, codec pack, video player, mediaplayer, media\",\n      \"ItemOBS\": \"obs, open broadcaster software, open source, opensource\"\n    }; // Temporarily using hardcoded search\n\n    let checkForCCleaner = inventory['ItemCCleaner'].search(keywords);\n    let checkForVLC = inventory['ItemVLC'].search(keywords);\n    let checkForBlender = inventory['ItemBlender'].search(keywords);\n    let checkForAudacity = inventory['ItemAudacity'].search(keywords);\n    let checkForInkscape = inventory['ItemInkscape'].search(keywords);\n    let checkForAvast = inventory['ItemAvast'].search(keywords);\n    let checkForCamtasia = inventory['ItemCamtasia'].search(keywords);\n    let checkForChrome = inventory['ItemChrome'].search(keywords);\n    let checkForKMPlayer = inventory['ItemKMPlayer'].search(keywords);\n    let checkForFirefox = inventory['ItemFirefox'].search(keywords);\n    let checkForIDM = inventory['ItemIDM'].search(keywords);\n    let checkFor7Zip = inventory['Item7Zip'].search(keywords);\n    let checkForVSCode = inventory['ItemVSCode'].search(keywords);\n    let checkForWinRAR = inventory['ItemWinRAR'].search(keywords);\n    let checkForCorelCAD = inventory['ItemCorelCAD'].search(keywords);\n    let checkForKLite = inventory['ItemKLiteCodecPack'].search(keywords);\n    let checkForOBS = inventory['ItemOBS'].search(keywords); // AutoFinder()\n    // let thisValue = Object.keys(inventory['ItemVLC']);\n    // const items = Object.keys(inventory).length;\n    // for(let i = 0; i < items; i++) {\n    //   let checkForApp = inventory[i].search(keywords);\n    //   if(checkForApp > -1) {\n    //     let thisValue = Object.keys(inventory[i]);\n    //     console.log(thisValue);\n    //   }\n    // }\n    // console.log(thisValue);\n\n    if (checkForCCleaner > -1) {\n      return React.createElement(ItemCCleaner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n\n    if (checkForVLC > -1) {\n      return React.createElement(ItemVLC, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    if (checkForBlender > -1) {\n      return React.createElement(ItemBlender, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    if (checkForAudacity > -1) {\n      return React.createElement(ItemAudacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n\n    if (checkForInkscape > -1) {\n      return React.createElement(ItemInkscape, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    }\n\n    if (checkForAvast > -1) {\n      return React.createElement(ItemAvast, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    if (checkForCamtasia > -1) {\n      return React.createElement(ItemCamtasia, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    }\n\n    if (checkForChrome > -1) {\n      return React.createElement(ItemChrome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n\n    if (checkForKMPlayer > -1) {\n      return React.createElement(ItemKMPlayer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n\n    if (checkForBlender > -1) {\n      return React.createElement(ItemBlender, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }\n\n    if (checkForFirefox > -1) {\n      return React.createElement(ItemFirefox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    }\n\n    if (checkForIDM > -1) {\n      return React.createElement(ItemIDM, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    }\n\n    if (checkFor7Zip > -1) {\n      return React.createElement(Item7Zip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n\n    if (checkForVSCode > -1) {\n      return React.createElement(ItemVSCode, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n\n    if (checkForWinRAR > -1) {\n      return React.createElement(ItemWinRAR, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    }\n\n    if (checkForCorelCAD > -1) {\n      return React.createElement(ItemCoreCAD, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n\n    if (checkForKLite > -1) {\n      return React.createElement(ItemKLite, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    }\n\n    if (checkForOBS > -1) {\n      return React.createElement(ItemOBS, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container-fluid pl-5 mt-5 pr-5 pb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 pl-5 pr-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Search results for \\\"\", getKeywords(), \"\\\"\"), React.createElement(\"div\", {\n    className: \"row text-center mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, getResults()))), React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 text-center mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    className: \"badge badge-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Early Access Notice\"), \" \", React.createElement(\"i\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Currently, the search functionality is limited to the software name. We're expanding search paramaters and will let you know soon when it's ready.\"))));\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/rj/ProductionLab/advancements/wixware/src/Pages/Search.jsx"],"names":["React","ItemVLC","ItemCamtasia","ItemCCleaner","ItemInkscape","ItemBlender","ItemVSCode","ItemFirefox","ItemCoreCAD","ItemKLite","ItemAvast","ItemWinRAR","ItemKMPlayer","Item7Zip","ItemAudacity","ItemIDM","ItemChrome","ItemOBS","Search","props","getKeywords","str","window","location","search","keyword","replace","keywords","getResults","inventory","checkForCCleaner","checkForVLC","checkForBlender","checkForAudacity","checkForInkscape","checkForAvast","checkForCamtasia","checkForChrome","checkForKMPlayer","checkForFirefox","checkForIDM","checkFor7Zip","checkForVSCode","checkForWinRAR","checkForCorelCAD","checkForKLite","checkForOBS"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport ItemVLC from '../Components/Items/VLC';\nimport ItemCamtasia from '../Components/Items/Camtasia';\nimport ItemCCleaner from '../Components/Items/CCleaner';\nimport ItemInkscape from '../Components/Items/InkScape';\nimport ItemBlender from '../Components/Items/Blender';\nimport ItemVSCode from '../Components/Items/VSCode';\nimport ItemFirefox from '../Components/Items/Firefox';\nimport ItemCoreCAD from '../Components/Items/CorelCAD';\nimport ItemKLite from '../Components/Items/KLiteCodecPack';\nimport ItemAvast from '../Components/Items/Avast';\nimport ItemWinRAR from '../Components/Items/ItemWinRAR';\nimport ItemKMPlayer from '../Components/Items/KMPlayer';\nimport Item7Zip from '../Components/Items/7Zip';\nimport ItemAudacity from '../Components/Items/Audacity';\nimport ItemIDM from '../Components/Items/ItemIDM';\nimport ItemChrome from '../Components/Items/Chrome';\nimport ItemOBS from '../Components/Items/ItemOBS';\n\nfunction Search(props) {\n\n  function getKeywords() {\n    const str = window.location.search;\n    let keyword = str.replace('?keyword=', '');\n    let keywords = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, ' ');\n    return keywords;\n  }\n\n  function getResults() {\n    const str = window.location.search;\n    let keyword = str.replace('?keyword=', '');\n    let keywords = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, ' ');\n\n    // Temporarily using hardcoded data\n    const inventory = {\n      \"ItemCCleaner\": \"ccleaner, c-cleaner, system cleaner, antivirus, anti virus, scanner, systemcleaner\",\n      \"ItemVLC\": \"vlc media player, vlcmediaplayer, mediaplayer\",\n      \"ItemBlender\": \"blender, video editor\",\n      \"ItemAudacity\": \"audacity, audio editor, noise reducer, pitch\",\n      \"ItemInkscape\": \"inkscape, illustrator, svg\",\n      \"ItemAvast\": \"avast, antivirus, system protection\",\n      \"ItemCamtasia\": \"camtasia, video editor, tech smith\",\n      \"ItemChrome\": \"google chrome, internet, web, browser\",\n      \"ItemKMPlayer\": \"kmplayer, km player, videoplayer, video, media codec\",\n      \"ItemFirefox\": \"mozilla firefox, opensource, open source, internet, web, browser\",\n      \"ItemIDM\": \"download, manager, idm, internet\",\n      \"Item7Zip\": \"7zip, 7 zip, file extractor, compressor, archive\",\n      \"ItemVSCode\": \"vscode, microsoft vs code, file, text, code, editor, developer, programmer, open source, opensource\",\n      \"ItemWinRAR\": \"winrar, win rar,file extractor, compressor, archive\",\n      \"ItemCorelCAD\": \"corecad, corel cad, 3d, graphics, blueprint\",\n      \"ItemKLiteCodecPack\": \"klite, k lite, codec pack, video player, mediaplayer, media\",\n      \"ItemOBS\": \"obs, open broadcaster software, open source, opensource\",\n    };\n\n    // Temporarily using hardcoded search\n    let checkForCCleaner = inventory['ItemCCleaner'].search(keywords);\n    let checkForVLC = inventory['ItemVLC'].search(keywords);\n    let checkForBlender = inventory['ItemBlender'].search(keywords);\n    let checkForAudacity = inventory['ItemAudacity'].search(keywords);\n    let checkForInkscape = inventory['ItemInkscape'].search(keywords);\n    let checkForAvast = inventory['ItemAvast'].search(keywords);\n    let checkForCamtasia = inventory['ItemCamtasia'].search(keywords);\n    let checkForChrome = inventory['ItemChrome'].search(keywords);\n    let checkForKMPlayer = inventory['ItemKMPlayer'].search(keywords);\n    let checkForFirefox = inventory['ItemFirefox'].search(keywords);\n    let checkForIDM = inventory['ItemIDM'].search(keywords);\n    let checkFor7Zip = inventory['Item7Zip'].search(keywords);\n    let checkForVSCode = inventory['ItemVSCode'].search(keywords);\n    let checkForWinRAR = inventory['ItemWinRAR'].search(keywords);\n    let checkForCorelCAD = inventory['ItemCorelCAD'].search(keywords);\n    let checkForKLite = inventory['ItemKLiteCodecPack'].search(keywords);\n    let checkForOBS = inventory['ItemOBS'].search(keywords);\n    \n    // AutoFinder()\n    // let thisValue = Object.keys(inventory['ItemVLC']);\n    // const items = Object.keys(inventory).length;\n    // for(let i = 0; i < items; i++) {\n    //   let checkForApp = inventory[i].search(keywords);\n    //   if(checkForApp > -1) {\n    //     let thisValue = Object.keys(inventory[i]);\n    //     console.log(thisValue);\n    //   }\n    // }\n    // console.log(thisValue);\n\n    \n    \n    if(checkForCCleaner > -1) {\n      return (<ItemCCleaner/>);\n    }\n    if(checkForVLC > -1) {\n      return (<ItemVLC/>);\n    }\n    if(checkForBlender > -1) {\n      return (<ItemBlender/>);\n    }\n    if(checkForAudacity > -1) {\n      return (<ItemAudacity/>);\n    }\n    if(checkForInkscape > -1) {\n      return (<ItemInkscape/>);\n    }\n    if(checkForAvast > -1) {\n      return (<ItemAvast/>);\n    }\n    if(checkForCamtasia > -1) {\n      return (<ItemCamtasia/>);\n    }\n    if(checkForChrome > -1) {\n      return (<ItemChrome/>);\n    }\n    if(checkForKMPlayer > -1) {\n      return (<ItemKMPlayer/>);\n    }\n    if(checkForBlender > -1) {\n      return (<ItemBlender/>);\n    }\n    if(checkForFirefox > -1) {\n      return (<ItemFirefox/>);\n    }\n    if(checkForIDM > -1) {\n      return (<ItemIDM/>);\n    }\n    if(checkFor7Zip > -1) {\n      return (<Item7Zip/>);\n    }\n    if(checkForVSCode > -1) {\n      return (<ItemVSCode/>);\n    }\n    if(checkForWinRAR > -1) {\n      return (<ItemWinRAR/>);\n    }\n    if(checkForCorelCAD > -1) {\n      return (<ItemCoreCAD/>);\n    }\n    if(checkForKLite > -1) {\n      return (<ItemKLite/>);\n    }\n    if(checkForOBS > -1) {\n      return (<ItemOBS/>);\n    }\n\n\n\n  }\n\n  return (\n    <div className='container-fluid pl-5 mt-5 pr-5 pb-5'>\n      <div className='row'>\n        <div className='col-12 pl-5 pr-5 text-center'>\n          <h1>Search results for \"{getKeywords()}\"</h1>\n          <div className='row text-center mt-5'>\n            {getResults()}\n          </div>\n        </div>\n      </div>\n      <div className='row mt-5'>\n        <div className='col-12 text-center mt-5'>\n          <small className='badge badge-warning'>Early Access Notice</small> <i className='small'>Currently, the search functionality is limited to the software name. We're expanding search paramaters and will let you know soon when it's ready.</i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}